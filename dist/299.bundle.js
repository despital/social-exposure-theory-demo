"use strict";(self.webpackChunksocial_exposure_theory=self.webpackChunksocial_exposure_theory||[]).push([[299],{3707:e=>{e.exports="data:image/svg+xml,%3C%3Fxml version=%271.0%27 encoding=%27utf-8%27%3F%3E%3C%21-- Generator: Adobe Illustrator 21.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0%29 --%3E%3Csvg version=%271.1%27 id=%27Layer_1%27 xmlns=%27http://www.w3.org/2000/svg%27 xmlns:xlink=%27http://www.w3.org/1999/xlink%27 x=%270px%27 y=%270px%27 viewBox=%270 0 10 10%27 style=%27enable-background:new 0 0 10 10;%27 xml:space=%27preserve%27%3E%3Cstyle type=%27text/css%27%3E .st0%7Bfill:%23404040;%7D%0A%3C/style%3E%3Cpolygon class=%27st0%27 points=%272,2 0,4 5,9 10,4 8,2 5,5 %27/%3E%3C/svg%3E%0A"},5265:(e,t,o)=>{o.r(t),o.d(t,{run:()=>m}),o(5259),o(2621),o(2716);var n=o(7299),i=o(9925),s=o(4824),a=o(1971),r=o(4774),c=o(6430),l=o(223),p=o(6290),u=o(8517),d=o(1958),h=o(4783);async function m({assetPaths:e,input:t={},environment:o,title:m,version:g}){const y=(0,n.N3)({show_progress_bar:!0,auto_update_progress_bar:!1,on_finish:function(){y.data.displayData()}}),f=(0,h.MI)(y);let _,v,b,w=(0,h.Oq)();w=(0,h.Gc)(w,y),y.data.addProperties({participant_id:f.participantId,study_id:f.studyId,session_id:f.sessionId,condition:f.condition,majority_group:f.majorityGroup,informed:f.informed,identity_color_mapping:w.map(e=>({id:e.id,identity:e.identity,color:e.color}))}),d.P.DISABLE_DATA_SAVING?console.log("Firebase data saving is DISABLED (development mode)"):(_=(0,l.Wp)(d.P.FIREBASE_CONFIG),v=(0,p.C3)(_),b=(0,u.xI)(),(0,u.zK)(b).catch(e=>{console.error("Firebase authentication error:",e)}));const k=(0,h.T4)(w,f,y);let x=0,I=0;console.log("Experiment initialized:",{condition:f.condition,majorityGroup:f.majorityGroup,informed:f.informed,participantId:f.participantId,totalTrials:k.length});const A=[],P={type:i.A,stimulus:"\n            <h1>Welcome to the Social Exposure Theory Experiment</h1>\n            <p>Press any key to begin.</p>\n        "};A.push(P);const T={type:s.A,stimulus:"\n            <h2>Informed Consent</h2>\n            <p>Before you begin, we need to obtain your informed consent to participate in this study.</p>\n            <p>Please click the button below to read the consent form.</p>\n            <p>You must agree to the terms in order to participate.</p>\n        ",choices:["View Consent Form"]};A.push(T);const E={type:a.A,url:"assets/informed_consent/consent_form.html",cont_btn:"start",check_fn:function(e){return!!document.getElementById("consent_checkbox").checked||(alert("If you wish to participate, you must check the box next to the statement 'I agree to participate in this study.'"),!1)},data:{task:"consent_form"}};A.push(E);const C={type:i.A,stimulus:"\n            <h2>Demographic Information</h2>\n            <p>Before we begin, we'd like to collect some basic demographic information.</p>\n            <p>This information helps us understand our participant pool and will be kept confidential.</p>\n            <p>Press any key to continue.</p>\n        "};A.push(C);const B={type:r.A,survey_json:{showQuestionNumbers:!1,completeText:"Continue to Experiment",pages:[{name:"page1",elements:[{type:"text",title:"What is your age?",name:"age",isRequired:!0,inputType:"number"},{type:"radiogroup",title:"What is your gender identity?",name:"gender",choices:["Male","Female","Non-binary","Prefer to self-describe","Prefer not to disclose"],isRequired:!0},{type:"checkbox",title:"What is your race/ethnicity? (Select all that apply)",name:"ethnicity",choices:["American Indian or Alaska Native","Asian","Black or African American","Hispanic or Latino","Native Hawaiian or Other Pacific Islander","White","Prefer not to disclose"],isRequired:!0},{type:"text",title:"What country do you currently reside in?",name:"country",isRequired:!0}]},{name:"page2",elements:[{type:"text",title:"What is your native language (first language you learned)?",name:"native_language",isRequired:!0},{type:"radiogroup",title:"What is the highest level of education you have completed?",name:"education",choices:["Less than high school","High school diploma or equivalent","Some college, no degree","Associate's degree","Bachelor's degree","Master's degree","Doctoral degree","Professional degree (MD, JD, etc.)","Prefer not to disclose"],isRequired:!0},{type:"rating",title:"MacArthur Scale of Subjective Social Status",description:"Think of this ladder as representing where people stand in society. At the top of the ladder are the people who are the best off - those who have the most money, the most education, and the most respected jobs. At the bottom are the people who are the worst off - who have the least money, least education, and the least respected jobs or no job.\n\nWhere would you place yourself on this ladder?",name:"income_ladder",rateMin:1,rateMax:10,minRateDescription:"Bottom",maxRateDescription:"Top",isRequired:!0}]},{name:"page3",elements:[{type:"rating",title:"Political Orientation",description:"How would you describe your political views?",name:"political_orientation",rateMin:1,rateMax:7,minRateDescription:"Very Liberal",maxRateDescription:"Very Conservative",isRequired:!0},{type:"radiogroup",title:"Do you wear glasses or contact lenses?",name:"vision_correction",choices:["Glasses","Contact lenses","Both","None"],isRequired:!0},{type:"radiogroup",title:"Color Blindness Screening: Do you have difficulty distinguishing between red and blue colors?",name:"color_blindness",choices:["No, I can easily distinguish red and blue","Yes, I have some difficulty","Yes, I have been diagnosed with color blindness","Not sure"],isRequired:!0}]}]},data:{task:"demographics"}};A.push(B);const S={type:i.A,stimulus:function(){let e='\n                <div style="max-width: 800px; margin: auto; text-align: left;">\n                    <h2>Instructions</h2>\n                    <p>In this experiment, you will see <strong>4 faces</strong> on each trial.</p>\n                    <p>Your task is to choose <strong>one person</strong> to interact with by clicking on their face.</p>\n                    <p>After your choice, you will receive either a <strong>reward (+1)</strong> or a <strong>punishment (-5)</strong>.</p>\n                    <p><strong>Your goal is to maximize your total score.</strong></p>\n            ';return f.informed&&(e+="\n                    <p><strong>Important information:</strong> The faces have colored backgrounds (red or blue).\n                    Both groups have similar proportions of people who tend to give rewards vs punishments.</p>\n                "),e+="\n                    <p>Press any key to start the experiment.</p>\n                </div>\n            ",e},on_start:function(){y.progressBar.progress=0}};A.push(S);const R={type:c.A,images:function(){return y.evaluateTimelineVariable("faces").map(e=>({src:e.imagePath,color:e.color,data:{id:e.id,isGood:e.isGood}}))},prompt:function(){return`\n                <div class="score-display">Score: ${x}</div>\n                <p>Choose a person to interact with by clicking on a face:</p>\n            `},image_width:200,image_height:200,grid_columns:2,gap:20,data:function(){return{task:"choice",block:y.evaluateTimelineVariable("block"),trial_in_block:y.evaluateTimelineVariable("trialInBlock")}},on_finish:function(e){const t=y.evaluateTimelineVariable("faces")[e.response],o=(0,h.p8)(t);x+=o,I++,e.chosen_face_id=t.id,e.chosen_face_color=t.color,e.chosen_face_is_good=t.isGood,e.outcome=o,e.total_score=x}},D={type:i.A,stimulus:function(){const e=y.data.get().last(1).values()[0].outcome;return`\n                <div class="score-display">Score: ${x}</div>\n                <div class="feedback ${e>0?"positive":"negative"}">\n                    ${e>0?`+${e}`:e}\n                </div>\n                <p>Press any key to continue</p>\n            `},trial_duration:1500,data:{task:"feedback"},on_finish:function(){const e=I/k.length;y.progressBar.progress=e}},G={type:i.A,stimulus:function(){return'\n                <div id="break-container">\n                    <h2>Break Time!</h2>\n                    <p>You\'ve completed a block of trials.</p>\n                    <p>Please take a break. The experiment will continue in:</p>\n                    <div id="countdown-timer" style="font-size: 48px; font-weight: bold; margin: 30px 0;">60</div>\n                    <p style="color: #666;">Or press the <strong>spacebar</strong> to continue immediately</p>\n                </div>\n            '},choices:[" "],trial_duration:6e4,on_load:function(){let e=60;const t=document.getElementById("countdown-timer"),o=setInterval(()=>{e--,t&&(t.textContent=e),e<=0&&clearInterval(o)},1e3);this.countdownInterval=o},on_finish:function(){this.countdownInterval&&clearInterval(this.countdownInterval)},data:{task:"break"}},V=[];for(let e=1;e<=d.P.EXPOSURES_PER_FACE;e++){const t={timeline:[R,D],timeline_variables:k.filter(t=>t.block===e)};V.push(t),e<d.P.EXPOSURES_PER_FACE&&V.push(G)}A.push(...V);const N={type:i.A,stimulus:function(){return`\n                <h2>Phase 1 Complete!</h2>\n                <p>Your Phase 1 score: <strong>${x}</strong></p>\n                <p>Great job! You've finished the first part of the experiment.</p>\n                <p>Press any key to continue.</p>\n            `},post_trial_gap:500};A.push(N);const Y={type:i.A,stimulus:function(){return'\n                <div id="break-container">\n                    <h2>Break Time!</h2>\n                    <p>You\'ve completed Phase 1 of the experiment.</p>\n                    <p>Please take a break before continuing to Phase 2.</p>\n                    <p>The experiment will continue in:</p>\n                    <div id="countdown-timer" style="font-size: 48px; font-weight: bold; margin: 30px 0;">60</div>\n                    <p style="color: #666;">Or press the <strong>spacebar</strong> to continue immediately</p>\n                </div>\n            '},choices:[" "],trial_duration:6e4,on_load:function(){let e=60;const t=document.getElementById("countdown-timer"),o=setInterval(()=>{e--,t&&(t.textContent=e),e<=0&&clearInterval(o)},1e3);this.countdownInterval=o},on_finish:function(){this.countdownInterval&&clearInterval(this.countdownInterval)},data:{task:"phase2_break"}};A.push(Y);const q={type:i.A,stimulus:'\n            <div style="max-width: 800px; margin: auto; text-align: left;">\n                <h2>Phase 2 Instructions</h2>\n                <p>In this phase, you will see <strong>4 new faces</strong> on each trial.</p>\n                <p>Your task is to choose <strong>one person</strong> you would like to interact with by clicking on their face.</p>\n                <p><strong>Note:</strong> You will NOT receive immediate feedback after each choice.</p>\n                <p>At the end of this phase, you will see your total score for Phase 2.</p>\n                <p>Press any key to start Phase 2.</p>\n            </div>\n        ',data:{task:"phase2_instructions"}};A.push(q);const $=(0,h._)(w,y);let j=0,F=0;console.log("Phase 2 initialized:",{totalTrials:$.length});const W={timeline:[{type:c.A,images:function(){return y.evaluateTimelineVariable("faces").map(e=>({src:e.imagePath,color:e.color,data:{id:e.id,isGood:e.isGood}}))},prompt:"<p>Choose a person you would like to interact with:</p>",image_width:200,image_height:200,grid_columns:2,gap:20,data:function(){return{task:"phase2_choice",phase:2,composition:y.evaluateTimelineVariable("composition"),red_count:y.evaluateTimelineVariable("redCount"),blue_count:y.evaluateTimelineVariable("blueCount")}},on_finish:function(e){const t=y.evaluateTimelineVariable("faces")[e.response],o=(0,h.p8)(t);j+=o,F++,e.chosen_face_id=t.id,e.chosen_face_color=t.color,e.chosen_face_is_good=t.isGood,e.outcome=o,e.phase2_score=j;const n=F/$.length;y.progressBar.progress=1+.5*n}}],timeline_variables:$};A.push(W);const M={type:i.A,stimulus:function(){return`\n                <h2>Phase 2 Complete!</h2>\n                <p>Your Phase 2 score: <strong>${j}</strong></p>\n                <p>Your total combined score: <strong>${x+j}</strong></p>\n                <p>Thank you for completing both phases!</p>\n                <p>Press any key to continue.</p>\n            `},post_trial_gap:500,data:{task:"phase2_summary",phase2_score:j,total_combined_score:x+j}};A.push(M);const O={type:i.A,stimulus:function(){return`\n                <h2>Experiment Complete!</h2>\n                <p>Phase 1 score: <strong>${x}</strong></p>\n                <p>Phase 2 score: <strong>${j}</strong></p>\n                <p>Total combined score: <strong>${x+j}</strong></p>\n                <p>Thank you for participating.</p>\n                <p>Press any key to save your data.</p>\n            `},post_trial_gap:500};if(A.push(O),!d.P.DISABLE_DATA_SAVING&&b){const e={type:i.A,stimulus:"<p>Saving data, please wait...</p>",trial_duration:2e3,choices:[],on_finish:function(){if(b.currentUser){const e=new Uint32Array(1);window.crypto.getRandomValues(e);const t=b.currentUser.uid+"/"+e[0];(0,p.hZ)((0,p.KR)(v,t),{data:y.data.get().values(),study:"social_exposure_theory_phase1",date:Date()})}}};A.push(e)}const L={type:i.A,stimulus:"<p>Data saved. Thank you for your participation!</p>",trial_duration:2e3,choices:[]};A.push(L),await y.run(A)}}}]);